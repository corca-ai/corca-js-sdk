/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/events/impression": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log an impression. */
        post: operations["EventsController_onImpression"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/click": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log a click. */
        post: operations["EventsController_onClick"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log when the customer views a specific product / category page. */
        post: operations["EventsController_onPageView"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/add-to-cart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log when the customer adds a product to the cart. */
        post: operations["EventsController_onAddToCart"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/purchase": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log when the customer purchases a product. */
        post: operations["EventsController_onPurchase"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/logs/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log when the customer searches. */
        post: operations["LogsController_onSearch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/events/impression": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Corca에서 광고/추천으로 반환한 상품이 노출되었을 때 호출해야 하는 API입니다. 자세한 수집 기준은 개발 가이드를 참고해주세요. */
        post: operations["EventController_onImpression"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/events/click": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Corca에서 광고/추천으로 반환한 상품이 클릭되었을 때 호출해야 하는 API입니다. 자세한 수집 기준은 개발 가이드를 참고해주세요. */
        post: operations["EventController_onClick"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/events/page-view/product-detail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description 상품 상세 페이지가 엔드유저에게 보여졌을때, 호출하는 API입니다. 스토어에서 일어나는 모든 상품 상세 페이지 뷰를 수집합니다. 자세한 수집 기준은 개발 가이드를 참고해주세요. */
        post: operations["EventController_onProductDetailPageView"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/events/add-to-cart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description 엔드유저가 상품을 장바구니에 담는 액션을 취할때, 호출하는 API입니다. 스토어에서 발생하는 모든 장바구니 추가 이벤트를 수집합니다. 자세한 수집 기준은 개발 가이드를 참고해주세요. */
        post: operations["EventController_onAddToCart"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/events/purchase": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description 구매 완료라고 판단할 수 있는 이벤트가 발생했을때, 호출하는 API입니다. 스토어에서 발생하는 모든 구매 완료 이벤트를 수집합니다. 자세한 수집 기준은 개발 가이드를 참고해주세요. */
        post: operations["EventController_onPurchase"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/logs/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description 엔드유저가 검색을 수행했을때, 호출하는 API입니다. */
        post: operations["LogController_onSearch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        TrackImpressionRequestDto: {
            /**
             * @description 코르카 Ads 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 사용자의 고유한 식별자, 로그인 하지 않은 사용자는 Customer ID를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description The version of the SDK
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description Identifier for the suggestion request
             * @example 47d889b5-a709-4802-8c72-c9e3c48ae88c
             */
            requestId?: string;
            /**
             * @description Product ID (on store).
             * @example 39
             */
            productIdOnStore?: string;
            /**
             * @description Product ID / Banner ID
             * @example f0452c18-6727-4e2a-8140-96c7367aba17
             */
            adsetId?: string;
            userAgent?: string;
            appVersion?: string;
        };
        TrackResponseDto: {
            success: boolean;
        };
        NestJSErrorSchema: {
            readonly statusCode: number;
            /** @example string | number */
            readonly message: Record<string, never>;
            readonly error: string;
        };
        TrackClickRequestDto: {
            /**
             * @description 코르카 Ads 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 사용자의 고유한 식별자, 로그인 하지 않은 사용자는 Customer ID를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description The version of the SDK
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description Identifier for the suggestion request
             * @example 47d889b5-a709-4802-8c72-c9e3c48ae88c
             */
            requestId?: string;
            /**
             * @description Product ID (on store).
             * @example 39
             */
            productIdOnStore?: string;
            /**
             * @description Product ID / Banner ID
             * @example f0452c18-6727-4e2a-8140-96c7367aba17
             */
            adsetId?: string;
            userAgent?: string;
            appVersion?: string;
        };
        TrackPageViewRequestDto: {
            /**
             * @description 코르카 Ads 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 사용자의 고유한 식별자, 로그인 하지 않은 사용자는 Customer ID를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description The version of the SDK
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description Identifier for the suggestion request
             * @example 47d889b5-a709-4802-8c72-c9e3c48ae88c
             */
            requestId?: string;
            /**
             * @description Product ID (on store).
             * @example 39
             */
            productIdOnStore?: string;
            /**
             * @description Product ID / Banner ID
             * @example f0452c18-6727-4e2a-8140-96c7367aba17
             */
            adsetId?: string;
            /**
             * @description Category ID (on store).
             * @example 2108
             */
            categoryIdOnStore?: string;
            userAgent?: string;
            appVersion?: string;
        };
        TrackAddToCartRequestDto: {
            /**
             * @description 코르카 Ads 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 사용자의 고유한 식별자, 로그인 하지 않은 사용자는 Customer ID를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description The version of the SDK
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description Identifier for the suggestion request
             * @example 47d889b5-a709-4802-8c72-c9e3c48ae88c
             */
            requestId?: string;
            /**
             * @description Product ID (on store).
             * @example 39
             */
            productIdOnStore?: string;
            /**
             * @description Product ID / Banner ID
             * @example f0452c18-6727-4e2a-8140-96c7367aba17
             */
            adsetId?: string;
            /**
             * @description Category ID (on store).
             * @example 2108
             */
            categoryIdOnStore?: string;
            /**
             * @description Unique identifier of the cart to prevent duplicate cart tracking.
             * @example 62412
             */
            cartId?: string;
            /**
             * @description Quantity of the product.
             * @example 2
             */
            quantity?: number;
            userAgent?: string;
            appVersion?: string;
        };
        TrackPurchaseRequestDto: {
            /**
             * @description 코르카 Ads 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 사용자의 고유한 식별자, 로그인 하지 않은 사용자는 Customer ID를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description The version of the SDK
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description Identifier for the suggestion request
             * @example 47d889b5-a709-4802-8c72-c9e3c48ae88c
             */
            requestId?: string;
            /**
             * @description Product ID (on store).
             * @example 39
             */
            productIdOnStore?: string;
            /**
             * @description Product ID / Banner ID
             * @example f0452c18-6727-4e2a-8140-96c7367aba17
             */
            adsetId?: string;
            /**
             * @description Category ID (on store).
             * @example 2108
             */
            categoryIdOnStore?: string;
            /**
             * @description Unique identifier of the order to prevent duplicate purchase tracking.
             * @example 23493
             */
            orderId: string;
            /**
             * @description Quantity of the product.
             * @example 2
             */
            quantity?: number;
            /**
             * @description The paid amount. It is used for calculating the ROAS.
             * @example 54000
             */
            amount: number;
            userAgent?: string;
            appVersion?: string;
        };
        TrackSearchRequestDto: {
            /**
             * @description 코르카 Ads 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 사용자의 고유한 식별자, 로그인 하지 않은 사용자는 Customer ID를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description The version of the SDK
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description The search query.
             * @example t-shirt
             */
            query: string;
            /** @description The suggested search query when typo ocurred. */
            suggestedQuery?: string;
            /**
             * @description Whether the search query found any results.
             * @example true
             */
            found?: boolean;
            /**
             * @description The pathname of the search page.
             * @example /product/search.html
             */
            pathname?: string;
            userAgent?: string;
            appVersion?: string;
        };
        ClickImpressionRequestDto: {
            /**
             * @description 엔드유저의 User-Agent | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36
             */
            userAgent?: string;
            /**
             * @description 사용중인 Corca SDK의 버전(Corca SDK를 사용중인 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로 SDK 사용중이 아니라면 값을 채워넣지 않습니다.
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description 스토어의 앱 버전(Corca를 연동한 서비스가 앱일 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example 1.0.0
             */
            appVersion?: string;
            /**
             * @description Corca 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 엔드유저의 고유한 식별자, 스토어에서 사용중인 엔드유저의 식별자를 보내주시면 됩니다. 로그인 하지 않은 사용자는 customerId를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description 광고/추천 요청에 대한 식별자 | 광고/추천 응답의 logOptions.requestId를 사용하면 됩니다.
             * @example ADVm24eom2ttdaCD7Oj
             */
            requestId: string;
            /**
             * @description 광고/추천 요청으로 나간 상품의 식별자 | 광고/추천 응답의 logOptions.adsetId를 사용하면 됩니다.
             * @example platform_store:354759646
             */
            adsetId: string;
        };
        ProductDetailPageViewRequestDto: {
            /**
             * @description 엔드유저의 User-Agent | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36
             */
            userAgent?: string;
            /**
             * @description 사용중인 Corca SDK의 버전(Corca SDK를 사용중인 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로 SDK 사용중이 아니라면 값을 채워넣지 않습니다.
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description 스토어의 앱 버전(Corca를 연동한 서비스가 앱일 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example 1.0.0
             */
            appVersion?: string;
            /**
             * @description Corca 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 엔드유저의 고유한 식별자, 스토어에서 사용중인 엔드유저의 식별자를 보내주시면 됩니다. 로그인 하지 않은 사용자는 customerId를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description view가 발생한 상품 상세 페이지의 상품 ID
             * @example 354759646
             */
            productId: string;
        };
        AddToCartRequestDto: {
            /**
             * @description 엔드유저의 User-Agent | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36
             */
            userAgent?: string;
            /**
             * @description 사용중인 Corca SDK의 버전(Corca SDK를 사용중인 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로 SDK 사용중이 아니라면 값을 채워넣지 않습니다.
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description 스토어의 앱 버전(Corca를 연동한 서비스가 앱일 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example 1.0.0
             */
            appVersion?: string;
            /**
             * @description Corca 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 엔드유저의 고유한 식별자, 스토어에서 사용중인 엔드유저의 식별자를 보내주시면 됩니다. 로그인 하지 않은 사용자는 customerId를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description 장바구니에 추가된 상품 ID
             * @example 354759646
             */
            productId: string;
            /**
             * @description 장바구니에 추가된 상품의 수량
             * @example 1
             */
            quantity: number;
        };
        PurchaseRequestDto: {
            /**
             * @description 엔드유저의 User-Agent | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36
             */
            userAgent?: string;
            /**
             * @description 사용중인 Corca SDK의 버전(Corca SDK를 사용중인 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로 SDK 사용중이 아니라면 값을 채워넣지 않습니다.
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description 스토어의 앱 버전(Corca를 연동한 서비스가 앱일 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example 1.0.0
             */
            appVersion?: string;
            /**
             * @description Corca 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 엔드유저의 고유한 식별자, 스토어에서 사용중인 엔드유저의 식별자를 보내주시면 됩니다. 로그인 하지 않은 사용자는 customerId를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /** @description 한 주문에서 구매된 상품의 목록 */
            items: components["schemas"]["PurchasedItemDto"][];
            /**
             * @description 결제한 최종 금액 | 쿠폰, 할인 등이 적용된 최종 결제 금액을 의미합니다.
             * @example 153000
             */
            amount: number;
            /**
             * @description 각 결제를 구별할 수 있는 고유한 주문 ID | 혹시 모를 구매 데이터 수집의 중복을 제거하는 용도로 사용되며, 스토어에서 사용중인 주문 ID를 넣으면 됩니다.
             * @example 20210520-0001
             */
            orderId?: string;
        };
        SearchRequestDto: {
            /**
             * @description 엔드유저의 User-Agent | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36
             */
            userAgent?: string;
            /**
             * @description 사용중인 Corca SDK의 버전(Corca SDK를 사용중인 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로 SDK 사용중이 아니라면 값을 채워넣지 않습니다.
             * @example 1.0.0
             */
            sdkVersion?: string;
            /**
             * @description 스토어의 앱 버전(Corca를 연동한 서비스가 앱일 경우) | 단순 디버깅 및 분석을 위해 사용되는 데이터로, 원치 않는 경우 값을 채워넣지 않아도 됩니다.
             * @example 1.0.0
             */
            appVersion?: string;
            /**
             * @description Corca 서비스에 등록된 플랫폼 클라이언트 아이디
             * @example platform_store
             */
            storeId: string;
            /**
             * @description 세션의 고유한 식별자, 세션은 엔드 유저가 스토어 웹을 방문한 순간부터 탭을 닫거나, 브라우저를 종료할 때까지의 기간을 의미합니다.
             * @example 8cca19cc-aea2-4937-9f76-6709ba35c66b
             */
            sessionId: string;
            /**
             * @description 사용자 디바이스를 식별하는 고유한 식별자
             * @example f7c79dd4-bb47-4e87-9815-a724c1503d37
             */
            deviceId: string;
            /**
             * @description 스토어에 로그인한 엔드유저의 고유한 식별자, 스토어에서 사용중인 엔드유저의 식별자를 보내주시면 됩니다. 로그인 하지 않은 사용자는 customerId를 null로 설정합니다.
             * @example corca0302
             */
            customerId?: string;
            /**
             * @description 검색 쿼리
             * @example t-shirt
             */
            query: string;
            /**
             * @description 검색 쿼리에 대한 결과가 있는지 여부. 1개라도 있으면 true, 없으면 false
             * @example true
             */
            found?: boolean;
            /**
             * @description 검색 페이지의 pathname
             * @example /product/search.html
             */
            pathname?: string;
        };
        PurchasedItemDto: {
            /**
             * @description 구매된 상품 ID
             * @example 354759646
             */
            productId: string;
            /**
             * @description 구매된 상품의 수량
             * @example 1
             */
            quantity: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    EventsController_onImpression: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackImpressionRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrackResponseDto"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventsController_onClick: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackClickRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrackResponseDto"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventsController_onPageView: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackPageViewRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrackResponseDto"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventsController_onAddToCart: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackAddToCartRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrackResponseDto"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventsController_onPurchase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackPurchaseRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrackResponseDto"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    LogsController_onSearch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackSearchRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventController_onImpression: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClickImpressionRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventController_onClick: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClickImpressionRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventController_onProductDetailPageView: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProductDetailPageViewRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventController_onAddToCart: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddToCartRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    EventController_onPurchase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PurchaseRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
    LogController_onSearch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SearchRequestDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NestJSErrorSchema"];
                };
            };
        };
    };
}
